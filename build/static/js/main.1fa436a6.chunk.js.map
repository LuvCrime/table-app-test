{"version":3,"sources":["OnBoarding/styles.module.css","Table/styles.module.css","Redux/Actions.js","OnBoarding/OnBoarding.js","Table/TableApp.js","App.js","reportWebVitals.js","Redux/Reducer.js","Redux/Store.js","index.js"],"names":["module","exports","nextId","OnBoarding","props","autoBind","number","this","setDataAmount","className","styles","wrapper","format","buttons","Button","variant","onClick","chooseAmount","React","Component","mapDispatchToProps","type","payload","connect","state","TableApp","isClicked","id","firstName","lastName","email","phone","pageNumber","loading","sortedRows","asc","searchingVal","searchMode","inputVal","userInfo","setState","dataUrl","dataAmount","fetch","then","response","json","data","forEach","user","addData","address","description","fieldName","alert","e","name","target","value","sort","a","b","localeCompare","slice","getIndex","map","onUserInfoButton","currentPage","filter","toLowerCase","includes","toString","searchedUser","Table","striped","bordered","hover","nameOfTableColumn","icon","faSortUp","onSortButton","style","transform","color","InputGroup","size","Prepend","Text","FormControl","aria-label","aria-describedby","autoComplete","onChange","onFormOnChange","divLoader","height","width","timeout","usersCount","length","pages","Math","ceil","items","push","Pagination","Item","active","onActiveButton","filteredUsers","renderFilterUsers","dataUsers","renderUsers","main","search","Append","onSearchButon","searchTable","form","renderAddFormInput","buttonAdd","addForm","renderTableColumn","pagination","userDescription","streetAddress","city","zip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","update","$push","$set","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fa436a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__3V2bS\",\"format\":\"styles_format__15EOY\",\"buttons\":\"styles_buttons__3VjOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3qyPG\",\"wrapper\":\"styles_wrapper__1HfEp\",\"sort\":\"styles_sort__1nYof\",\"buttonAdd\":\"styles_buttonAdd__1Jv4S\",\"addUserForm\":\"styles_addUserForm__3xLjl\",\"form\":\"styles_form__1XnfO\",\"arrows\":\"styles_arrows__2zjI1\",\"svgLoader\":\"styles_svgLoader__vp81g\",\"spin\":\"styles_spin__2rYH5\",\"divLoader\":\"styles_divLoader__1jSDR\",\"search\":\"styles_search__1xzFA\",\"userDescription\":\"styles_userDescription__1-2X6\",\"pagination\":\"styles_pagination__1-VIR\"};","let nextId = 0;\n\nexport const addData = (id, firstName, lastName, email, phone, address, description) => {\n  if (id === null) {\n    return {\n      type: \"ADD_DATA\",\n      payload: {\n        id: ++nextId,\n        firstName,\n        lastName,\n        email,\n        phone, \n        address,\n        description\n      },\n    };\n  } else {\n    return {\n      type: \"ADD_DATA\",\n      payload: {\n        id,\n        firstName,\n        lastName,\n        email,\n        phone,\n        address,\n        description\n      },\n    };\n  }\n};\n\nexport const setDataAmount = (number) => {\n  return {\n    type: \"DATA_AMOUNT\",\n    payload: number\n  }\n}","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { setDataAmount } from \"../Redux/Actions\";\nimport { connect } from \"react-redux\";\nimport autoBind from \"react-autobind\";\n\nexport class OnBoarding extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n  }\n\n  chooseAmount(number) {\n    this.props.setDataAmount(number);\n  }\n\n  render() {\n    return (\n      <div className={styles.wrapper}>\n        <div className={styles.format}>Select data amount:</div>\n        <div className={styles.buttons}>\n          <Button variant=\"primary\" onClick={() => this.chooseAmount(32)}>\n            Small amount\n          </Button>{\" \"}\n          <Button variant=\"primary\" onClick={() => this.chooseAmount(1000)}>\n            Huge amount\n          </Button>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return null;\n};\n\nconst mapDispatchToProps = {\n  setDataAmount: setDataAmount,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnBoarding);\n","import Table from \"react-bootstrap/Table\";\nimport React from \"react\";\nimport styles from \"./styles.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { addData } from \"../Redux/Actions\";\nimport { connect } from \"react-redux\";\nimport autoBind from \"react-autobind\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { FormControl } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\n\nconst ROWS_PER_PAGE = 50;\n\nclass TableApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false,\n      id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      pageNumber: 1,\n      loading: true,\n      sortedRows: \"\",\n      asc: true,\n      searchingVal: \"\",\n      searchMode: false,\n      inputVal: \"\",\n      userInfo: \"\",\n    };\n    autoBind(this);\n  }\n\n  onUserInfoButton(userInfo) {\n    this.setState({\n      userInfo: userInfo,\n    });\n  }\n\n  componentDidMount() {\n    const dataUrl = `http://www.filltext.com/?rows=${this.props.dataAmount}&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D`;\n    fetch(dataUrl)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        data.forEach((user) => {\n          this.props.addData(\n            user.id,\n            user.firstName,\n            user.lastName,\n            user.email,\n            user.phone,\n            user.address,\n            user.description\n          );\n        });\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  onSearchButon() {\n    if (this.state.searchMode === false) {\n      this.setState({\n        searchMode: true,\n        searchingVal: this.state.inputVal,\n        inputVal: \"\",\n      });\n    } else {\n      this.setState({\n        searchMode: false,\n        searchingVal: this.state.inputVal,\n        inputVal: \"\",\n      });\n    }\n  }\n\n  onSortButton(fieldName) {\n    if (this.state.sortedRows === fieldName) {\n      if (this.state.asc === true) {\n        this.setState({\n          asc: false,\n        });\n      } else {\n        this.setState({\n          asc: true,\n        });\n      }\n    } else {\n      this.setState({\n        sortedRows: fieldName,\n        asc: true,\n      });\n    }\n  }\n\n  addForm() {\n    if (this.state.isClicked === false) {\n      this.setState({\n        isClicked: true,\n      });\n    } else if (\n      this.state.firstName === \"\" ||\n      this.state.lastName === \"\" ||\n      this.state.email === \"\" ||\n      this.state.phone === \"\"\n    ) {\n      alert(\"All form fields should be filled\");\n      return;\n    } else {\n      this.setState({\n        isClicked: false,\n      });\n      this.props.addData(\n        null,\n        this.state.firstName,\n        this.state.lastName,\n        this.state.email,\n        this.state.phone\n      );\n    }\n    this.setState({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n    });\n  }\n\n  onFormOnChange(e) {\n    let name = e.target.name;\n    this.setState({\n      [name]: e.target.value,\n    });\n  }\n\n  onActiveButton(number) {\n    this.setState({\n      pageNumber: number,\n    });\n  }\n\n  renderUsers() {\n    var usersTable = this.props.data\n      .sort((a, b) => {\n        if (this.state.asc === true) {\n          if (typeof a[this.state.sortedRows] === \"string\") {\n            return a[this.state.sortedRows].localeCompare(\n              b[this.state.sortedRows]\n            );\n          } else {\n            return a[this.state.sortedRows] - b[this.state.sortedRows];\n          }\n        } else {\n          if (typeof a[this.state.sortedRows] === \"string\") {\n            return b[this.state.sortedRows].localeCompare(\n              a[this.state.sortedRows]\n            );\n          } else {\n            return b[this.state.sortedRows] - a[this.state.sortedRows];\n          }\n        }\n      })\n      .slice(this.getIndex()[0], this.getIndex()[1])\n      .map((data) => {\n        return (\n          <tr onClick={() => this.onUserInfoButton(data)}>\n            <td>{data.id}</td>\n            <td>{data.firstName}</td>\n            <td>{data.lastName}</td>\n            <td>{data.email}</td>\n            <td>{data.phone}</td>\n          </tr>\n        );\n      });\n    return usersTable;\n  }\n\n  getIndex() {\n    let currentPage = this.state.pageNumber;\n    let firstIndex = ROWS_PER_PAGE * (currentPage - 1);\n    let lastIndex = ROWS_PER_PAGE * currentPage;\n    return [firstIndex, lastIndex];\n  }\n\n  renderFilterUsers() {\n    var filter = this.props.data\n      .filter((user) => {\n        if (this.state.searchingVal === \"\") {\n          return;\n        }\n        if (this.state.searchMode === true || this.state.searchMode === false) {\n          if (\n            user.firstName\n              .toLowerCase()\n              .includes(this.state.searchingVal.toLowerCase())\n          ) {\n            return true;\n          } else if (\n            user.lastName\n              .toLowerCase()\n              .includes(this.state.searchingVal.toLowerCase())\n          ) {\n            return true;\n          } else if (\n            user.email\n              .toLowerCase()\n              .includes(this.state.searchingVal.toLowerCase())\n          ) {\n            return true;\n          } else if (user.phone.includes(this.state.searchingVal)) {\n            return true;\n          } else if (user.id.toString() === this.state.searchingVal) {\n            return true;\n          }\n        } else {\n          return false;\n        }\n        return false;\n      })\n      .map((searchedUser) => {\n        return (\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>id</th>\n                <th>firstName</th>\n                <th>lastName</th>\n                <th>email</th>\n                <th>phone</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr onClick={() => this.onUserInfoButton(searchedUser)}>\n                <td>{searchedUser.id}</td>\n                <td>{searchedUser.firstName}</td>\n                <td>{searchedUser.lastName}</td>\n                <td>{searchedUser.email}</td>\n                <td>{searchedUser.phone}</td>\n              </tr>\n            </tbody>\n          </Table>\n        );\n      });\n    return filter;\n  }\n\n  renderTableColumn(nameOfTableColumn) {\n    return (\n      <th>\n        {nameOfTableColumn}\n        <span className={styles.sort}>\n          <FontAwesomeIcon\n            icon={faSortUp}\n            onClick={(e) => this.onSortButton(nameOfTableColumn)}\n            style={{\n              transform: `rotate(${\n                this.state.sortedRows === nameOfTableColumn &&\n                this.state.asc === true\n                  ? 0\n                  : 180\n              }deg)`,\n              color:\n                this.state.sortedRows === nameOfTableColumn ? \"black\" : \"grey\",\n            }}\n          />\n        </span>\n      </th>\n    );\n  }\n\n  renderAddFormInput(name, type) {\n    return (\n      <InputGroup size=\"sm\" className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"inputGroup-sizing-sm\">{name}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          aria-label=\"Small\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n          name={name}\n          value={this.state[name]}\n          autoComplete=\"off\"\n          type={type}\n          onChange={this.onFormOnChange}\n        />\n      </InputGroup>\n    );\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className={styles.divLoader}>\n          <Loader\n            type=\"Circles\"\n            color=\"#007bff\"\n            height={80}\n            width={80}\n            timeout={3000}\n          />\n        </div>\n      );\n    }\n    let usersCount = this.props.data.length;\n    let pages = Math.ceil(usersCount / ROWS_PER_PAGE);\n    let firstIndex = this.getIndex()[0];\n    let lastIndex = this.getIndex()[1];\n    let items = [];\n    for (let number = 1; number <= pages; number++) {\n      items.push(\n        <Pagination.Item\n          key={number}\n          active={number === this.state.pageNumber}\n          onClick={(e) => this.onActiveButton(number)}\n        >\n          {number}\n        </Pagination.Item>\n      );\n    }\n\n    const filteredUsers = this.renderFilterUsers();\n\n    const dataUsers = this.renderUsers();\n\n    return (\n      <div className={styles.wrapper}>\n        <div className={styles.main}>\n          <div className={styles.search}>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n                name=\"inputVal\"\n                onChange={this.onFormOnChange}\n                value={this.state.inputVal}\n                autoComplete=\"off\"\n              />\n              <InputGroup.Append>\n                <Button variant=\"primary\" onClick={this.onSearchButon}>\n                  Search\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n            <div className={styles.searchTable}>{filteredUsers}</div>\n          </div>\n          {this.state.isClicked && (\n            <div className={styles.form}>\n              {this.renderAddFormInput(\"firstName\", \"text\")}\n              {this.renderAddFormInput(\"lastName\", \"text\")}\n              {this.renderAddFormInput(\"email\", \"email\")}\n              {this.renderAddFormInput(\"phone\", \"number\")}\n            </div>\n          )}\n          <div className={styles.buttonAdd}>\n            <Button variant=\"primary\" onClick={this.addForm}>\n              Add User\n            </Button>{\" \"}\n          </div>\n          <Table striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                {this.renderTableColumn(\"id\")}\n                {this.renderTableColumn(\"firstName\")}\n                {this.renderTableColumn(\"lastName\")}\n                {this.renderTableColumn(\"email\")}\n                {this.renderTableColumn(\"phone\")}\n              </tr>\n            </thead>\n            <tbody>{dataUsers}</tbody>\n          </Table>\n          <div className={styles.pagination}>\n            <Pagination size=\"sm\">{items}</Pagination>\n          </div>\n          {this.state.userInfo && (\n            <div className={styles.userDescription}>\n              <b>User info</b>\n              <div>id: {this.state.userInfo.id}</div>\n              <div>firstName: {this.state.userInfo.firstName}</div>\n              <div>lastName: {this.state.userInfo.lastName}</div>\n              <div>email: {this.state.userInfo.email}</div>\n              <div>phone: {this.state.userInfo.phone}</div>\n              <div>address: {this.state.userInfo.address.streetAddress}</div>\n              <div>streetAddress: {this.state.userInfo.address.city}</div>\n              <div>city: {this.state.userInfo.address.state}</div>\n              <div>zip: {this.state.userInfo.address.zip}</div>\n              <div>description: {this.state.userInfo.description}</div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = {\n  addData: addData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableApp);\n","import \"./App.css\";\nimport OnBoarding  from \"./OnBoarding/OnBoarding\";\nimport TableApp from \"./Table/TableApp\";\nimport { connect } from \"react-redux\";\n\n\nfunction App(props) {\n  if(props.dataAmount) {\n  return (\n    <div className=\"App\">\n      <TableApp />\n    </div>\n  );\n  } else {\n    return (\n      <div className=\"App\">\n        <OnBoarding />\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    dataAmount: state.dataAmount\n  };\n};\n\nconst mapDispatchToProps = {\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import update from \"immutability-helper\";\n\nconst initialState = {\n  data: [\n\n  ],\n  dataAmount: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_DATA\":\n      return update(state, { data: { $push: [action.payload] } });\n      case \"DATA_AMOUNT\": \n      return update(state, {\n        dataAmount: {$set: action.payload}\n      })\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './Reducer'\n\nexport  let store = createStore(reducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}